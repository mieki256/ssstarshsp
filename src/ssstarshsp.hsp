    ; Screensavers like ssstars.scr created by HGIMG3
    ; fork arusave.hsp
    ;
    ; HGIMG3を使って実装したスクリーンセーバの一例。
    ; 「宇宙飛行」スクリーンセーバに似た感じの見た目。
    ;
    ; Windows10 x64 22H2 + HSP 3.7 beta7
    ; 2023/11/06 by mieki256
    
    #include "hgimg3.as"
    #include "d3m.hsp"
    
    #uselib "kernel32"
    #func GetModuleFileName "GetModuleFileNameA" int, int, int
    
    ; 以下の行をコメントアウトすればexeになる
    ;#define SCREENSAVER_ENABLE
    
    #define TITLESTR    "ssstars for HGIMG3"
    #define VERSTR      "1.0.0"
    
    #define     INI_FILENAME    "ssstarshsp.ini"
    #define     MYFILENAME      "ssstarshsp"
    #packopt    name            "ssstarshsp"
   
#ifdef SCREENSAVER_ENABLE
    #packopt type 2         ; generate ".scr"
#else
    #packopt type 0         ; generate ".exe"
#endif
    
    #packopt xsize  640     ; config window width
    #packopt ysize  320     ; config window height

    ; images to include in the exe file
    #define TEXFILE         "star.png"
    #define PREVIEWFILE     "preview.png"
    #define FONTFILE        "font.png"
    #pack   TEXFILE
    #pack   PREVIEWFILE
    #pack   FONTFILE
    
    #define KB_ESC      $000080
    
    #define NWDW_ID     2
    
    ; paramater
    star_spd = 40.0
    framerate = 60
    objmax = 512
    fps_disp_enable = 1
    blur_enable = 0
    
    ; ----------------------------------------
    ; read ini file
    
    gosub *default_ini_value_init
    gosub *read_ini
    
    ; ----------------------------------------
    ; parse command line option
    
    s = dir_cmdline         ; get command line option
    i = instr(s, 0, "/")    ; "/" の出現位置を検索
    if i == -1 {
        ; not option
        ; goto *config_mode
        
#ifdef SCREENSAVER_ENABLE
        goto *config_mode
#else
        goto *fullscreen_mode
#endif
        ; goto *preview_mode
    }
    
    a = strmid(s, i, 2)     ; 2文字だけ取り出し
    if a == "/p" or a == "/P" : goto *preview_mode      ; プレビュー
    if a == "/s" or a == "/S" : goto *fullscreen_mode   ; フルスクリーン
    if a == "/c" or a == "/C" : goto *config_mode       ; コンフィグ
    
    ; コマンドラインがどれでもない時はエラー表示
    dialog "Unknown switch [" + s + "]"
    end

*config_mode
    ; 設定画面
    goto *display_config
    ; goto *display_config_simple
    
*preview_mode
    ; プレビュー画面
    goto *display_preview

; ----------------------------------------
*fullscreen_mode
    ; フルスクリーン描画処理
    
    ; get desktop size
    dispw = ginfo_dispx
    disph = ginfo_dispy
    
    ; ウインドウID2で枠無しウインドウを新規作成
    ; これができないとHSPでスクリーンセーバを作れない
    ; initialize window without frame. ID=2
    ; bgscr WindowID, width, height, mode, x, y
    bgscr NWDW_ID, dispw, disph, 0, 0, 0, dispw, disph
    
    hgini       ; initialize hgimg3
    
    ; init bimap font, load font texture
    setfont 20, 20, 18, 1   ; 20x20 font
    texload FONTFILE
    
    ; load texture
    texload2 TEXFILE
    texid = stat        ; get texture ID
    texw = 512
    texh = 512
    
    gsel NWDW_ID, 1
    
    clscolor $000000    ; set clear color
    
    if blur_enable {
        clsblur 96      ; set blur. 0 - 255
    }
    
    randomize
    
    star_size = 0.75
    dist = 150.0        ; screen distabce
    area_z = 5000
    zmax = double(area_z) + dist
    
    ; rnd() only accepts 1 to 32768.
    ; adjust the value to stay within that range.
    area_m = 4.0
    area_w = int((double(dispw) * zmax) / dist / area_m)
    area_h = int((double(disph) * zmax) / dist / area_m)
    
    ; initialize stars work
    ddim posx, objmax       ; position x
    ddim posy, objmax       ; position y
    ddim posz, objmax       ; position z
    dim px, objmax          ; display position x
    dim py, objmax          ; display position y
    ddim scalev, objmax     ; scale
    dim alpha, obj_max      ; alpha value
    dim patidx, obj_max     ; pattern index
    repeat objmax
        gosub *get_newpos_xy
        posx(cnt) = nx
        posy(cnt) = ny
        patidx(cnt) = idx
        posz(cnt) = double(rnd(area_z)) + dist
        px(cnt) = 0
        py(cnt) = 0
        scale(cnt) = 0.0
        alpha(cnt) = 0
    loop
    
    time_start = d3timer()
    endfg = 0
    
; ----------------------------------------
*mainloop
    while endfg == 0
        tm = d3timer() - time_start
        fps = d3getfps()                ; get FPS
        
#ifndef SCREENSAVER_ENABLE
        ; ESC key to exit
        stick key, 0
        if key & KB_ESC : endfg = 1
#endif
        
        ; move stars
        repeat objmax
            posz(cnt) -= star_spd
            if posz(cnt) < (dist / 2.0) {
                posz(cnt) += zmax
                gosub *get_newpos_xy
                posx(cnt) = nx
                posy(cnt) = ny
                patidx(cnt) = idx
            }
            
            ; get display x, y position
            px(cnt) = int(posx(cnt) * dist / posz(cnt)) + (dispw / 2)
            py(cnt) = int(posy(cnt) * dist / posz(cnt)) + (disph / 2)
            scalev(cnt) = star_size * dist / posz(cnt)
            
            size = int(512.0 * scalev(cnt))
            x0 = px(cnt) - (size / 2)
            y0 = py(cnt) - (size / 2)
            x1 = px(cnt) + (size / 2)
            y1 = py(cnt) + (size / 2)
            if x1 < 0 or x0 > dispw or y1 < 0 or y0 > disph {
                ; out of display area. position reset
                posz(cnt) += zmax
                gosub *get_newpos_xy
                posx(cnt) = nx
                posy(cnt) = ny
                patidx(cnt) = idx
                px(cnt) = int(posx(cnt) * dist / posz(cnt)) + (dispw / 2)
                py(cnt) = int(posy(cnt) * dist / posz(cnt)) + (disph / 2)
                scalev(cnt) = star_size * dist / posz(cnt)
            }
            
            ; get alpha value
            az = double(area_z) * 0.7
            if posz(cnt) < az {
                alpha(cnt) = 255
            } else {
                ; fade in
                z = posz(cnt)
                if z > zmax : z = zmax
                v0 = z - az
                v1 = zmax - az
                alpha(cnt) = int(255.0 - (255.0 * v0 / v1))
            }
        loop
        
        ; ----------------------------------------
        ; draw start
        hgdraw
        
        ; clear screen
        ; color 64, 128, 192
        ; boxf
        
        ; draw stars
        repeat objmax
            rot = 0.0
            idx = 0
            
            ; draw image by celput
            gmode gmode_add, texw, texh, alpha(cnt)
            pos px(cnt), py(cnt)
            rot = 0.0
            idx = patidx(cnt)
            sw = (idx \ 2) * texw
            sh = ((idx / 2) \ 2) * texh
            dw = int(double(texw) * scalev(cnt))
            dh = int(double(texh) * scalev(cnt))
            hgrotate texid, sw, sh, rot, dw, dh
        loop

        ; draw text
        if fps_disp_enable {
            gmode gmode_rgb0
            fprt strf("[%dx%d] %d/%dFPS", dispw, disph, fps, framerate), 10, 10
        }
        
        ; draw end. screen refersh. wait
        t = (1000 / framerate) - 1
        if t <= 0 : t = 1
        hgsync t
    wend            ; end main loop
    
*jobend:
    end
    
*get_newpos_xy
    nx = double(rnd(area_w) - (area_w / 2)) * area_m
    ny = double(rnd(area_h) - (area_h / 2)) * area_m
    idx = rnd(4)
    return

; ----------------------------------------
*display_preview
    ; プレビュー画面表示
    ; スクリーンセーバー選択時の、小さな画面内でのプレビューの処理。
    ; HSPのWindow ID0がプレビュー画面に合わせて小さくなっているので、
    ; ginfo_winx, ginfo_winy で画面サイズを取得後、その中に描画する。
    ;
    ; 経験上、単に画像を表示してstopしたほうが不具合が起きにくい。
    ; 下手に作り込むと、Windowsのイベントビューアにエラーが残る状態になる。
    
    ; get preview window size
    wdw_w = ginfo_winx
    wdw_h = ginfo_winy
    
    ; load preview image
    imgid = 3
    w = 152
    h = 112
    buffer imgid, w, h
    picload PREVIEWFILE
    iw = ginfo_winx
    ih = ginfo_winy
    
    ; draw
    gsel 0
    redraw 0
    cls 4
    gmode gmode_gdi, iw, ih
    gzoom wdw_w, wdw_h, imgid, 0, 0, iw, ih, 1
    redraw 1
    
    stop

; ----------------------------------------
*display_config
    ; 設定画面をレイアウトして表示
    
    screen 0, 640, 320, 0
    title TITLESTR + " " + VERSTR
    gsel 0, 1
    gmode gmode_gdi
    
    ; objmode 2
    ; font "Tahoma", 14, 0
    
    ; input box
    x = 300
    pos x, 60
    input star_spd, 160
    objprm 0, str(old_star_spd)
    
    pos x, 100
    input framerate, 160
    objprm 1, str(old_framerate)
    
    pos x, 140
    input objmax, 160
    objprm 2, str(old_objmax)
    
    objsize 140, 40
    pos 100, 180
    chkbox " FPS display", fps_disp_enable
    objprm 3, old_fps_disp_enable
    
    objsize 140, 40
    pos 260, 180
    chkbox " Blur", blur_enable
    objprm 4, old_blur_enable
    
    ; buttons. cancel, save
    objmode 2
    font "Tahoma", 16, 0
    objsize 120, 40
    x = 360
    y = 260
    pos x, y
    button gosub "Cancel", *config_end
    pos x + 120 + 20, y
    button gosub "Save", *save_ini
    
    ; labels
    font "Tahoma", 20, 1, 3
    
    color 1, 1, 1
    objcolor 200, 200, 200
    pos 20, 8
    mes "Config - " + TITLESTR + " " + VERSTR
    
    font "Tahoma", 14, 1
    
    x = 20
    pos x, 60
    mes "Stars move speed (10.0 - 100.0)"
    
    pos x, 100
    mes "Framerate (FPS, 1 - 60)"
    
    pos x, 140
    mes "Number of stars (1 - 2048)"
    stop
    
*config_end
    end

; ----------------------------------------
*display_config_simple
    screen 0, 640, 320, 0
    
    title TITLESTR + " " + VERSTR
    
    gsel 0, 1
    cls
    font "Tahoma", 18, 1
    
    redraw 0
    
    gmode gmode_rgb0
    color 0, 0, 0
    pos 20, 20
    mes "Config - " + TITLESTR
    pos 20, 50
    mes "Version : " + VERSTR
    pos 370 + 120 + 10, 260
    button "OK", *ssend
    
    redraw 1
    
    await 15
    stop
    
*ssend
    end

; ----------------------------------------
*get_ini_filepath
    ; iniファイル名を取得
    
#ifdef _DEBUG
    ; 開発用
    ini_filepath = INI_FILENAME
#else
    ; 本番用
    ; 自分自身のファイル名を取得
    sdim filepath, 256
    GetModuleFileName, varptr(filepath), 256

    ; iniファイルのファイルパスを生成
    fn = getpath(filepath, 8+1) ; ファイル名(拡張子除く)を取得
    if fn == MYFILENAME {
        ; 本番
        ini_filepath = getpath(filepath, 1) + ".ini"
    } else {
        ; 開発時
        ini_filepath = MYFILENAME + ".ini"
    }
#endif
    logmes strf("get ini filename : [%s]", ini_filepath)
    return

; ----------------------------------------
*save_ini
    gosub *get_ini_filepath

    ; iniファイルに書き込む内容を作成
    if star_spd <= 1.0 : star_spd = 1.0
    if objmax <= 1 : objmax = 1
    if framerate <= 1 : framerate = 1
    
    ini_data = ""
    notesel ini_data
    noteadd "; star move speed"
    noteadd "star_spd=" + star_spd
    noteadd ""
    noteadd "; framerate (FPS)"
    noteadd "framerate=" + framerate
    noteadd ""
    noteadd "; number of stars"
    noteadd "objmax=" + objmax
    noteadd ""
    noteadd "; FPS display. 0: disable / 1: enable"
    noteadd "fps_disp_enable=" + fps_disp_enable
    noteadd ""
    noteadd "; blur 0: disable / 1: enable"
    noteadd "blur_enable=" + blur_enable
    
    notesave ini_filepath
    dialog "Save " + ini_filepath, 0
    noteunsel
    
    logmes strf("Save [%s]", ini_filepath)
    stop
    
; ----------------------------------------
*read_ini
    ; read ini file
    
    gosub *default_ini_value_init
    gosub *get_ini_filepath

    ;; iniファイル読み込み用領域を確保
    ini_data = ""
    notesel ini_data

    ; iniファイル存在チェック
    exist ini_filepath
    if strsize = -1 {
        ; not found ini
        logmes strf("Not found [%s]", ini_filepath)
    } else {
        ; iniファイルを読み込む
        noteload ini_filepath
        logmes strf("Load [%s]", ini_filepath)

        ; 1行ずつ内容を解析して記録
        sdim ld, 512
        repeat notemax
            noteget ld, cnt     ; 1行分を取得
            
            if instr(ld, 0, ";") == 0 : continue        ; comment line. skip
            
            if instr(ld, 0, "star_spd=") >= 0 {
                split ld, "=", kind, cmd
                star_spd = double(cmd)
            }
            if instr(ld, 0, "framerate=") >= 0 {
                split ld, "=", kind, cmd
                framerate = int(cmd)
            }
            if instr(ld, 0, "objmax=") >= 0 {
                split ld, "=", kind, cmd
                objmax = int(cmd)
            }
            if instr(ld, 0, "fps_disp_enable=") >= 0 {
                split ld, "=", kind, cmd
                fps_disp_enable = int(cmd)
            }
            if instr(ld, 0, "blur_enable=") >= 0 {
                split ld, "=", kind, cmd
                blur_enable = int(cmd)
            }
        loop
    }

    noteunsel
    
    ; 結果をデバッグウインドウのログに出力
    logmes "star_spd = " + star_spd
    logmes "objmax = " + objmax
    logmes "fps_disp_enable = " + fps_disp_enable
    logmes "framerate = " + framerate
    logmes "blur_enable = " + blur_enable
    
    old_star_spd = star_spd
    old_framerate = framerate
    old_objmax = objmax
    old_fps_disp_enable = fps_disp_enable
    old_blur_enable = blur_enable
    return

*default_ini_value_init
    ; デフォルト設定値で初期化
    star_spd = 40.0
    framerate = 60
    objmax = 512
    fps_disp_enable = 1
    blur_enable = 0
    return
